/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.45
 * Generated at: 2022-04-06 11:40:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Objects;
import ucl.ac.uk.records.Note;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Objects");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("ucl.ac.uk.records.Note");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("  <head>\r\n");
      out.write("    <title>My Notes</title>\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/meta.jsp", out, false);
      out.write("\r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/header.jsp", out, false);
      out.write("\r\n");
      out.write("    ");
 
    String indexSelected = request.getParameter("indexSelected");
    ArrayList<Note> notes = (ArrayList<Note>)request.getAttribute("notes");
    List<String> indexes = (List<String>) request.getAttribute("indexes");
    String indexSearch = (String) request.getAttribute("indexSearch");
    String noteSearch = (String) request.getAttribute("noteSearch");
    if (Objects.isNull(indexSearch)) indexSearch = "";
    if (Objects.isNull(noteSearch)) noteSearch = "";
    
      out.write("\r\n");
      out.write("    <div class=\"container main\">\r\n");
      out.write("\r\n");
      out.write("      <div class=\"container indexes\">\r\n");
      out.write("        <div class=\"card\">\r\n");
      out.write("\r\n");
      out.write("          <div class=\"card-header\">\r\n");
      out.write("            Indexes\r\n");
      out.write("            <form method=\"get\" action=\"/runIndexSearch\">\r\n");
      out.write("              <div class=\"input-group rounded\">\r\n");
      out.write("                <input type=\"hidden\" name=\"indexSelected\" value=\"");
      out.print(indexSelected);
      out.write("\" />\r\n");
      out.write("                <input type=\"text\" class=\"form-control rounded\" placeholder=\"Find Index...\" name=\"search\" value=\"");
      out.print(indexSearch);
      out.write("\"/>\r\n");
      out.write("                <input type=\"submit\" value=\"Search\">\r\n");
      out.write("              </div>\r\n");
      out.write("            </form>\r\n");
      out.write("          </div>\r\n");
      out.write("\r\n");
      out.write("          <ul class=\"list-group list-group-flush\">\r\n");
      out.write("            ");
 
            for (String index : indexes) {
              String href = "/?indexSelected=" + index;
              if (Objects.isNull(indexSelected)) 
              { 
      out.write("\r\n");
      out.write("                <li class=\"list-group-item\"><a href=\"");
      out.print(href);
      out.write('"');
      out.write('>');
      out.print(index);
      out.write("</a></li>\r\n");
      out.write("              ");
 } else {
                if (index.equals(indexSelected)) { 
      out.write("\r\n");
      out.write("                  <li class=\"list-group-item\" style=\"background-color: rgb(222, 222, 222);\"><a href=\"/\">");
      out.print(index);
      out.write("</a></li>\r\n");
      out.write("                ");
 } else { 
      out.write("\r\n");
      out.write("                  <li class=\"list-group-item\"><a href=\"");
      out.print(href);
      out.write('"');
      out.write('>');
      out.print(index);
      out.write("</a></li>\r\n");
      out.write("                ");
 }
              }
            } 
      out.write("\r\n");
      out.write("          </ul>\r\n");
      out.write("\r\n");
      out.write("          <div class=\"card-body\">\r\n");
      out.write("            <form action=\"/addIndex\" method=\"get\">\r\n");
      out.write("              <div class=\"input-group rounded\">\r\n");
      out.write("                <input type=\"text\" required=\"required\" class=\"form-control rounded\" name=\"indexToAdd\" placeholder=\"Name\">\r\n");
      out.write("                <input type=\"submit\" value=\"Add Index\"></a>\r\n");
      out.write("              </div>\r\n");
      out.write("            </form>\r\n");
      out.write("              ");

              if (!Objects.isNull(indexSelected)) { 
      out.write("\r\n");
      out.write("                <div class=\"text-center deleteIndex\">\r\n");
      out.write("                  <a onClick=\"return confirm('Are you sure? This action cannot be undone.') \"href=\"/deleteIndex?indexSelected=");
      out.print(indexSelected);
      out.write("\" class=\"card-link\">Delete Index</a>\r\n");
      out.write("                </div>\r\n");
      out.write("              ");
 } 
      out.write("\r\n");
      out.write("          </div>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <div class=\"container notes\">\r\n");
      out.write("        <div class=\"card\">\r\n");
      out.write("\r\n");
      out.write("          <div class=\"card-header\">\r\n");
      out.write("            Notes\r\n");
      out.write("            <form method=\"get\" action=\"/runNotesSearch\">\r\n");
      out.write("              <div class=\"input-group rounded\">\r\n");
      out.write("                <input type=\"hidden\" name=\"indexSelected\" value=\"");
      out.print(indexSelected);
      out.write("\" />\r\n");
      out.write("                <input type=\"search\" class=\"form-control rounded\" placeholder=\"Find Note...\" name=\"search\" value=\"");
      out.print(noteSearch);
      out.write("\"/>\r\n");
      out.write("                <input type=\"submit\" value=\"Search\">\r\n");
      out.write("              </div>\r\n");
      out.write("            </form>\r\n");
      out.write("          </div>\r\n");
      out.write("          \r\n");
      out.write("          ");
 
          if (Objects.isNull(notes)) { 
      out.write("\r\n");
      out.write("            <h4 class=\"action\">Select an index</h4>\r\n");
      out.write("          ");
 } else  if (notes.isEmpty()) { 
      out.write("\r\n");
      out.write("            <h4 class=\"action\">No notes to show</h4>\r\n");
      out.write("          ");
 } else { 
      out.write("\r\n");
      out.write("            <div id=\"accordion\">\r\n");
      out.write("              ");
 
              int i = 0;
              for (Note note : notes) { 
                i++; 
      out.write("\r\n");
      out.write("  \r\n");
      out.write("                <div class=\"card\">\r\n");
      out.write("                  <div class=\"card-header\" id=\"heading");
      out.print(i);
      out.write("\">\r\n");
      out.write("                    <h5 class=\"mb-0\">\r\n");
      out.write("                      <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapse");
      out.print(i);
      out.write("\" aria-expanded=\"false\" aria-controls=\"collapse");
      out.print(i);
      out.write("\">    \r\n");
      out.write("                        <h5 class=\"card-title\">\r\n");
      out.write("                          ");
      out.print(note.title());
      out.write("\r\n");
      out.write("                        </h5>\r\n");
      out.write("                      </button>\r\n");
      out.write("                    </h5>\r\n");
      out.write("                    <a href=\"/deleteNote?indexSelected=");
      out.print(indexSelected);
      out.write("&noteTitle=");
      out.print(note.title());
      out.write("\" class=\"card-link deleteNote\">Delete Note</a>\r\n");
      out.write("                    <a href=\"/editNote.jsp?indexSelected=");
      out.print(indexSelected);
      out.write("&noteTitle=");
      out.print(note.title());
      out.write("&noteDetails=");
      out.print(note.details());
      out.write("&noteImage=");
      out.print(note.image());
      out.write("&noteYoutube=");
      out.print(note.youtube());
      out.write("\" \r\n");
      out.write("                      class=\"card-link\">\r\n");
      out.write("                      Edit Note\r\n");
      out.write("                    </a>\r\n");
      out.write("                  </div>\r\n");
      out.write("  \r\n");
      out.write("                  <div id=\"collapse");
      out.print(i);
      out.write("\" class=\"collapse\" aria-labelledby=\"heading");
      out.print(i);
      out.write("\" data-parent=\"#accordion\">\r\n");
      out.write("                    <div class=\"card-body\">\r\n");
      out.write("                      <p class=\"card-text\">\r\n");
      out.write("                        ");
      out.print(note.details());
      out.write("\r\n");
      out.write("                      </p>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    ");

                    if (!note.image().isEmpty()) { 
      out.write("\r\n");
      out.write("                      <img class=\"card-img-bot media\" src=\"");
      out.print(note.image());
      out.write("\">\r\n");
      out.write("                    ");
 }
                    if (!note.youtube().isEmpty()) { 
      out.write("\r\n");
      out.write("                      <iframe class=\"media\" style=\"border:none\" height=\"400\" src=\"https://www.youtube.com/embed/");
      out.print(note.youtube());
      out.write("\"></iframe>\r\n");
      out.write("                    ");
 } 
      out.write("\r\n");
      out.write("                  </div>\r\n");
      out.write("                </div>\r\n");
      out.write("  \r\n");
      out.write("              ");
 } 
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("          ");
 } 
      out.write("\r\n");
      out.write("          \r\n");
      out.write("          ");
 if (!Objects.isNull(notes)) { 
      out.write("\r\n");
      out.write("            <div class=\"text-center addNote\">\r\n");
      out.write("              <a href=\"/createNote?indexSelected=");
      out.print(indexSelected);
      out.write("\" class=\"card-link\">Create Note</a>\r\n");
      out.write("            </div>\r\n");
      out.write("          ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
